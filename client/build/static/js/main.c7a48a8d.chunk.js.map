{"version":3,"sources":["App.jsx","serviceWorker.js","index.js","images/tgtsnbn.jpg"],"names":["App","getMeetUpNext","fetch","then","data","json","console","log","react_default","a","createElement","className","src","tgtsnbn","id","alt","uk-navbar","href","color","onClick","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c7a48a8d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css'\nimport tgtsnbn from './images/tgtsnbn.jpg';\n// import { log } from 'util';\n// import App from './components/App';\n\n\nclass App extends Component {\n\n  getMeetUpNext = () => {\n\n    var queryURL = \"https://api.meetup.com/2/events?key=711b1c41327ea3e2f1d2044b454361&group_urlname=TGTSNBN\";\n\n    var key = \"711b1c41327ea3e2f1d2044b454361\"\n\n    fetch(queryURL).then(function (data) {\n      return data.json();\n    }).then(function (data) {\n      console.log(data);\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"WelcomeBody\">\n          <div className=\"uk-container\">\n            <img src={tgtsnbn} id=\"logo\" alt=\"NYC harry potter logo\" />\n\n            {/* <div uk-sticky=\"animation: uk-animation-slide-top; sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky; cls-inactive: uk-navbar-transparent uk-light; top: 200\"> */}\n\n              <nav className=\"uk-navbar-container\" id=\"header\">\n                <div className=\"uk-container uk-container-expand\">\n                  <div uk-navbar>\n\n                    <ul className=\"uk-navbar-nav\" >\n                      <li className=\"uk-active\"><a href=\"https://www.meetup.com/TGTSNBN\">To Join</a></li>\n                      <li>\n                        <a href=\"#\">Contact Us</a>\n                        <div className=\"uk-navbar-dropdown\">\n                          <ul className=\"uk-nav uk-navbar-dropdown-nav\">\n                            <li className=\"uk-active\"><a href=\"#\">Get in Contact</a></li>\n\n                            <li><a href=\"#\">facebook</a></li>\n                            <li><a href=\"mailto:jrosent@gmail.com\">Email</a></li>\n                            <li><a href=\"#\">instagram</a></li>\n                          </ul>\n                        </div>\n                      </li>\n                      <li>\n                        <a href=\"#\">Contact Forms</a>\n                        <div className=\"uk-navbar-dropdown\">\n                          <ul className=\"uk-nav uk-navbar-dropdown-nav\">\n                            <li className=\"uk-active\" color=\"yellow\">Forms</li>\n                            <li><a href=\"formcontact.html\">Ask us to join you at an event</a></li>\n                            <li><a href=\"#\">Volunteer form</a></li>\n                            <li><a href=\"#\">Suggestion form</a></li>\n\n                          </ul>\n                        </div>\n                      </li>\n                      <li className=\"uk-active\"><a href=\"#\">News</a></li>\n                      <li className=\"uk-active\"><a href=\"3\">Gallery</a></li>\n                      <li className=\"uk-active\"><a href=\"database/staff.html\">Staff Login</a></li>\n\n                    </ul>\n                  </div>\n                </div>\n              </nav>\n            {/* </div> */}\n\n\n            <div><h1>Welcome the The Group That Shall Not Be Named!</h1></div>\n            <div><p> We are HP-NYC, \"The Group That Shall Not be Named\". And Harry Potter isn't over till we say its over. We are the largest HP fan club in the world with over 2000 members. Our members span every type of person possible but we are united in our love of these books. We meet regularly on the 1st Thursday of every month and have special events almost every month. If you are looking for a way to meet new friends and forge new relationships in this huge city of ours, then you've come to the right place. We have a wide range of events and activities that are as diverse as the interests of our members. We strive to provide an experience that allows you to indulge in your talents and creativity while having a tremendously fun time.</p></div>\n            <div><h2>Meet up info</h2></div>\n            <div><button onClick={this.getMeetUpNext} className=\"bottomUpdate\" id=\"upcoming\">To see our Next Meet Up click me!</button></div>\n            <div>\n              <p>Follow the Link in the below to attented the next evenet.</p>\n              <a href=\"https://www.meetup.com/TGTSNBN/\">Meetup</a></div>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n// import { BrowserRouter as Router } from 'react-router-dom';\n\n// import Navigation from '../Navigation';\n\n// const App = () => (\n//   <Router>\n//     <Navigation />\n//   </Router>\n// );\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\nexport default App;","module.exports = __webpack_public_path__ + \"static/media/tgtsnbn.31b9ec7e.jpg\";"],"sourceRoot":""}